// Platzieren Sie Ihre Einstellungen in dieser Datei, um die Standardeinstellungen zu Ã¼berschreiben.
{
  "security.workspace.trust.untrustedFiles": "open",
  "breadcrumbs.enabled": true,
  "telemetry.enableTelemetry": false,
  "telemetry.enableCrashReporter": false,
  "extensions.ignoreRecommendations": true,
  "extensions.autoUpdate": false,
  //
  "files.autoSave": "off",
  "files.associations": {
    "*.mdw": "markdown",
    "*.mdwiki": "markdown"
  },
  //
  "editor.fontFamily": "'GoMono NF', 'CaskaydiaCove NF', 'DroidSansMono NF', Consolas, 'Courier New', monospace",
  "editor.fontSize": 13,
  "editor.renderWhitespace": "none",
  "editor.mouseWheelZoom": true,
  "editor.insertSpaces": true,
  "editor.tabSize": 2,
  "editor.minimap.enabled": false,
  "editor.rulers": [
    80,
    120
  ],
  "editor.showFoldingControls": "always",
  "editor.lineNumbers": "relative",
  // When I accidentally hit copy without selecting anything and it overrides my clipboard - ugh.
  "editor.emptySelectionClipboard": false,
  "editor.formatOnPaste": true,
  // Controls if quick suggestions should show up while typing
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": false
  },
  "editor.snippetSuggestions": "top",
  // Controls the delay in ms after which quick suggestions will show up.
  "editor.quickSuggestionsDelay": 1500,
  // Controls if suggestions should automatically show up when typing trigger characters
  "editor.suggestOnTriggerCharacters": false,
  //
  "diffEditor.ignoreTrimWhitespace": false,
  //
  "window.zoomLevel": 1,
  "window.menuBarVisibility": "visible",
  "window.enableMenuBarMnemonics": false,
  //
  "workbench.editor.showTabs": true,
  "workbench.colorTheme": "Wombat",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.sideBar.location": "left",
  "workbench.activityBar.visible": true,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.colorCustomizations": {
    "statusBar.debuggingForeground": "#f3f5f5",
    "editorIndentGuide.activeBackground": "#5c5ada",
    "tab.activeBackground": "#753238",
    "tab.activeForeground": "#ffffff",
    "tab.inactiveBackground": "#5e5858",
    "tab.inactiveForeground": "#ffffff",
    "tab.unfocusedActiveBackground": "#685050",
    "tab.border": "#000000",
    "editorGroupHeader.tabsBorder": "#ff0000",
    "editorGroupHeader.tabsBackground": "#5e5858",
    "editorGroupHeader.tabs": "#ff0000",
    "editorPane.background": "#ff0000",
    "statusBar.background": "#005F5F",
    "statusBar.noFolderBackground": "#005F5F",
    "statusBar.debuggingBackground": "#005F5F",
    "statusBar.foreground": "#FFFFFF"
  },
  //"terminal.external.windowsExec": "C:\\WINDOWS\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe",
  //"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
  "terminal.integrated.fontSize": 11,
  "terminal.integrated.lineHeight": 1.2,
  "terminal.integrated.cursorBlinking": false,
  "terminal.integrated.cursorStyle": "block",
  "terminal.integrated.defaultProfile.windows": "C:\\windows\\System32\\cmd.exe",
  "terminal.integrated.defaultProfile.linux": "bash",
  //
  "merge-conflict.diffViewPosition": "Below",
  //
  "markdown-pdf.executablePath": "C:\\Users\\r.brudna\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe",
  "markdown-preview-enhanced.usePandocParser": true,
  "[markdown]": {
    "editor.wordWrapColumn": 120,
    "editor.wordWrap": "wordWrapColumn",
    "editor.insertSpaces": true
  },
  //
  "gitlens.defaultDateFormat": "YYYY-MM-DD hh:mm",
  "gitlens.defaultDateShortFormat": "YY-MM-DD",
  "gitlens.defaultTimeFormat": "hh:mm",
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.enabled": false,
  "gitlens.keymap": "none",
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": false,
    "suppressCommitNotFoundWarning": false,
    "suppressFileNotUnderSourceControlWarning": false,
    "suppressGitVersionWarning": false,
    "suppressLineUncommittedWarning": false,
    "suppressNoRepositoryWarning": false,
  },
  //
  "todo-tree.general.tags": [
      "BUG",
      "HACK",
      "FIXME",
      "TODO",
      "QUESTION",
      "[ ]",
      "[x]"
  ],
  "todo-tree.highlights.customHighlight": {
      "BUG": {
          "icon": "bug"
      },
      "HACK": {
          "icon": "tools"
      },
      "FIXME": {
          "icon": "flame",
          "foreground": "#000",
          "background": "#FF0",
          "type": "tag",
          "gutterIcon": true
      },
      "QUESTION": {
          "icon": "$(dialog-close)",
          "foreground": "#FF0",
          "background": "#05F",
          "type": "tag",
          "gutterIcon": true
      }
  },
  //
  "fileutils.typeahead.enabled": false,
  //
  "go.lintOnSave": "package",
  "go.vetOnSave": "package",
  "go.useLanguageServer": true,
  "go.autocompleteUnimportedPackages": true,
  "go.gopath": "/home/rbr/Projects/share/go",
  "[go]": {
    "editor.formatOnSave": true
  },
  //
  "java.errors.incompleteClasspath.severity": "ignore",
  //
  "dotnet-test-explorer.testProjectPath": "**/*Test.@(csproj|vtproj|fsproj)",
  "dotnet-test-explorer.autoWatch": true,
  "dotnet-test-explorer.testArguments": "/p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=./lcov.info",
  "dotnet-test-explorer.enableTelemetry": false,
  "cSpell.words": [
      "Xunit"
  ],
  // Editor stuff using neovim
  "redhat.telemetry.enabled": false,
  "vim.leader": ",",
  "vim.sneak": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.foldfix": true,
  "vim.easymotion": true,
  "vim.surround": true,
  "vim.useCtrlKeys": true,
  //"vim.enableNeovim": false,
  //"vim.neovimPath": "C:/Projects/Programs/neovim/nvim/bin/nvim.exe",
  //"vim.neovimConfigPath": "C:/Projects/dotfiles/nvim/init.vim",
  //"vim.neovimUseConfigFile": true,
  //"vim.statusBarColors.normal": "#005F5F",
  //"vim.statusBarColorControl": true,
  //"vim.statusBarColors.insert": "#005F87",
  //"vim.statusBarColors.replace": "#5C5ADA",
  //"vim.statusBarColors.visual": "#F50B0B",
  //"vim.statusBarColors.visualline": "#F50B0B",
  //"vim.statusBarColors.visualblock": "#F50B0B",
  //"vim.statusBarColorControl": true,
  //"vim.statusBarColors.normal": [
  //    "#005F5F",
  //    "#FFFFFF"
  //],
  //"vim.statusBarColors.insert": "#BF616A",
  //"vim.statusBarColors.visual": "#B48EAD",
  //"vim.statusBarColors.visualline": "#B48EAD",
  //"vim.statusBarColors.visualblock": "#A3BE8C",
  //"vim.statusBarColors.replace": "#D08770",
  //"vim.statusBarColors.commandlineinprogress": "#007ACC",
  //"vim.statusBarColors.searchinprogressmode": "#007ACC",
  //"vim.statusBarColors.easymotionmode": "#007ACC",
  //"vim.statusBarColors.easymotioninputmode": "#007ACC",
  //"vim.statusBarColors.surroundinputmode": "#007ACC",
  //"vim.handleKeys": {
  //        "<C-a>": false,
  //        "<C-f>": false
  //    },
  "vim.insertModeKeyBindings": [
      { "before": [ "<Down>" ], "after": [ "<Nop>" ] },
      { "before": [ "<Up>" ], "after": [ "<Nop>" ] }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
      {
          "before": [
              "<leader>",
              "n"
          ],
          "after": [],
          "commands": [
              {
                  "command": "workbench.action.toggleSidebarVisibility",
                  "args": []
              }
          ]
      },
      {
          "before": [
              "<leader>",
              "b",
              "l"
          ],
          "after": [],
          "commands": [
              {
                  "command": "workbench.action.showAllEditors",
                  "args": []
              }
          ]
      },
      {
          "before": [
              "<leader>",
              "b",
              "d"
          ],
          "after": [],
          "commands": [
              {
                  "command": "workbench.action.closeActiveEditor",
                  "args": []
              }
          ]
      },
      {
          "before": [
              "<leader>",
              "b",
              "n"
          ],
          "after": [],
          "commands": [
              {
                  "command": "workbench.action.nextEditor",
                  "args": []
              }
          ]
      },
      {
          "before": [
              "<leader>",
              "b",
              "p"
          ],
          "after": [],
          "commands": [
              {
                  "command": "workbench.action.previousEditor",
                  "args": []
              }
          ]
      }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
  ],
}
// EOF
